# VPS Deployment Commands for Enhanced IMDb Worker
# Execute these commands in order on your Hetzner VPS

# 1. Stop existing worker (if running)
sudo docker stop imdb-worker 2>/dev/null || true
sudo docker rm imdb-worker 2>/dev/null || true

# 2. Create deployment directory
mkdir -p ~/imdb-worker
cd ~/imdb-worker

# 3. Copy files to VPS (run these from your local machine)
# scp worker-enhanced.cjs root@37.27.92.76:~/imdb-worker/
# scp Dockerfile root@37.27.92.76:~/imdb-worker/
# scp package.json root@37.27.92.76:~/imdb-worker/

# 4. Create package.json for dependencies
cat > package.json << 'EOF'
{
  "name": "imdb-worker",
  "version": "2.1.0",
  "description": "VPS worker for IMDb scraping",
  "main": "worker-enhanced.cjs",
  "scripts": {
    "start": "node worker-enhanced.cjs"
  },
  "dependencies": {
    "express": "^4.18.2",
    "puppeteer": "^21.5.2"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
EOF

# 5. Build Docker image
sudo docker build -t imdb-worker .

# 6. Run Docker container with environment variables
sudo docker run -d \
  --name imdb-worker \
  --restart unless-stopped \
  -p 3003:3003 \
  -e NODE_ENV=production \
  -e TMDB_API_KEY=09a2e4b535394bb6a9e1d248cf87d5ac \
  imdb-worker

# 7. Verify deployment
echo "Waiting for container to start..."
sleep 10

# 8. Test health endpoint
curl -s http://localhost:3003/health | jq .

# 9. Test scraping endpoint
echo "Testing scraping with sample user..."
curl -X POST http://localhost:3003/jobs \
  -H "Content-Type: application/json" \
  -d '{"imdbUserId": "ur31595220", "forceRefresh": true}' \
  | jq '.success, .totalItems'

# 10. Check container logs
sudo docker logs imdb-worker --tail 50

# 11. Test external access
curl -s http://37.27.92.76:3003/health | jq .

# 12. Verify firewall allows port 3003
sudo ufw status | grep 3003 || sudo ufw allow 3003

# Additional management commands:

# View container status
# sudo docker ps | grep imdb-worker

# View logs
# sudo docker logs -f imdb-worker

# Stop container
# sudo docker stop imdb-worker

# Remove container
# sudo docker rm imdb-worker

# Remove image
# sudo docker rmi imdb-worker

# Update deployment (after code changes):
# sudo docker stop imdb-worker
# sudo docker rm imdb-worker
# sudo docker build -t imdb-worker .
# sudo docker run -d --name imdb-worker --restart unless-stopped -p 3003:3003 -e NODE_ENV=production -e TMDB_API_KEY=09a2e4b535394bb6a9e1d248cf87d5ac imdb-worker

# Monitor resource usage
# sudo docker stats imdb-worker

# Expected successful output:
# Health check: {"status":"healthy","timestamp":"...","version":"2.1.0","service":"vps-worker"}
# Scraping test: true, 250+ (number of items scraped)